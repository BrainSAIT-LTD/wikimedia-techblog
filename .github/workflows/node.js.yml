# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
            - name: JetBrains ReSharper Inspect Code
  # You may pin to the exact commit or the version.
  # uses: JetBrains/ReSharper-InspectCode@ef165568cb02e723172ccae2b944d713624d43e2
  uses: JetBrains/ReSharper-InspectCode@v0.3
  with:
    # Path to the file to use custom settings from (default: Use R#'s solution shared settings if exists)
    settings: # optional
    # Write inspections report to specified file
    output: # optional, default is results.sarif.json
    # Write inspections report in specified format [Xml, Html, Text, Sarif]
    format: # optional, default is Sarif
    # Run up to N jobs in parallel. 0 means as many as possible
    jobs: # optional, default is 0
    # Use absolute paths in inspections report
    absolute-paths: # optional, default is False
    # Force disable solution-wide analysis
    no-swea: # optional, default is False
    # Force enable solution-wide analysis
    swea: # optional, default is False
    # Analyze only projects selected by provided wildcards (default: analyze all projects in solution)
    project: # optional
    # Analyze only files selected by provided wildcards (default: analyze all files in solution)
    include: # optional
    # Exclude files selected by provided wildcards from analysis (default: analyze all files in solution)
    exclude: # optional
    # Dump issues types
    dumpIssuesTypes: # optional, default is False
    # Minimal severity level to report [INFO, HINT, SUGGESTION, WARNING, ERROR]
    sEverity: # optional, default is SUGGESTION
    # Show debugging messages
    debug: # optional, default is False
    # Display this amount of information [OFF, FATAL, ERROR, WARN, INFO, VERBOSE, TRACE]
    verbosity: # optional, default is INFO
    # Show help and exit
    help: # optional
    # Show tool version and exit
    version: # optional
    # MsBuild toolset version. Highest available is used by default. Example: --toolset=12.0
    toolset: # optional
    # MsBuild toolset (exe/dll) path. Example: --toolset-path=/usr/local/msbuild/bin/current/MSBuild.exe
    toolset-path: # optional
    # Mono path. Empty to ignore Mono. Not specified for autodetect. Example: --mono=/Library/Frameworks/Mono.framework/Versions/Current/bin/mono
    mono: # optional
    # .NET Core path. Empty to ignore .NET Core. Not specified for autodetect. Example: --dotnetcore=/usr/local/share/dotnet/dotnet
    dotnetcore: # optional
    # .NET Core SDK version. Example: --dotnetcoresdk=3.0.100
    dotnetcoresdk: # optional
    # Disable specified settings layers. Possible values: GlobalAll, GlobalPerProduct, SolutionShared, SolutionPersonal, ProjectShared, ProjectPersonal
    disable-settings-layers: # optional
    # Suppress global, solution and project settings profile usage. Alias for --disable-settings-layers:GlobalAll;GlobalPerProduct;SolutionShared;SolutionPersonal;ProjectShared;ProjectPersonal
    no-buildin-settings: # optional, default is False
    # Path to the directory where produced caches will be stored
    caches-home: # optional
    # MSBuild properties
    properties: # optional
    # MSBuild targets. These targets will be executed to get referenced assemblies of projects.
    targets-for-references: # optional
    # MSBuild targets. These targets will be executed to get other items (e.g. Compile item) of projects.
    targets-for-items: # optional
    # Install and use specified extensions
    eXtensions: # optional
    # Install extensions from specified source(s)
    source: # optional
    # Measure own tool's performance [MEMORY, SAMPLING, TIMELINE]
    measure: # optional
    # Do not build solution before processing
    no-build: # optional, default is False
    # Build solution before processing
    build: # optional, default is True
    # MsBuild target to execute before processing.
    target: # optional, default is Build
    # Opt out from telemetry
    telemetry-optout: # optional
    # Solution file
    solution: # optional
    # Tool Version
    tool-version: # optional, default is 2023.2.0-eap09
          
name: Node.js CI

on:
  push:
    branches: [ "production" ]
  pull_request:
    branches: [ "production" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
                - name: Setup Node.js environment
  uses: actions/setup-node@v4.0.0
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
                      - name: Upload a Build Artifact
  uses: actions/upload-artifact@v3.1.3
  with:
    # Artifact name
    name: # optional, default is artifact
    # A file, directory or wildcard pattern that describes what to upload
    path: 
    # The desired behavior if no files are found using the provided path.
Available Options:
  warn: Output a warning but do not fail the action
  error: Fail the action with an error message
  ignore: Do not output any warnings or errors, the action does not fail

    if-no-files-found: # optional, default is warn
    # Duration after which artifact will expire in days. 0 means using default retention.
Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

    retention-days: # optional
                      - name: Jira issue from TODO
  # You may pin to the exact commit or the version.
  # uses: atlassian/gajira-todo@b172b724b495db556f083b5155d71c1fc107f80e
  uses: atlassian/gajira-todo@v3
  with:
    # Key of the project
    project: 
    # Type of the issue to be created. Example: 'Incident'
    issuetype: 
    # Issue description
    description: # optional
                      - name: Deploy HelmFile
  # You may pin to the exact commit or the version.
  # uses: cloudposse/github-action-deploy-helmfile@e5396120c8d09d826889c286a3c7e27fa17f3f15
  uses: cloudposse/github-action-deploy-helmfile@0.5.0
  with:
    # Cluster name
    cluster: 
    # AWS region
    aws-region: # optional, default is us-east-1
    # The path where lives the helmfile.
    helmfile-path: # optional, default is deploy
    # Helmfile name
    helmfile: # optional, default is helmfile.yaml
    # Operation with helmfiles. (valid options - `deploy`, `destroy`)
    operation: # default is deploy
    # Helmfile environment
    environment: # optional, default is preview
    # Git SHA
    gitref-sha: # optional, default is 
    # Kubernetes namespace
    namespace: 
    # Docker image
    image: 
    # Docker image tag
    image-tag: 
    # Debug mode
    debug: # optional, default is false
    # The name of the label used to describe the helm release
    release_label_name: # optional, default is release
    # YAML string with extra values to use in a helmfile deploy
    values_yaml: # optional
    # Helm version
    helm_version: # optional, default is 3.11.1
    # Helmfile version
    helmfile_version: # optional, default is 0.143.5
    # Kubectl version
    kubectl_version: # optional, default is 1.26.3
    # Kubectl version
    chamber_version: # optional, default is 2.11.1
          
